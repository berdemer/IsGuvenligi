# Docker Compose version is obsolete and removed for optimization

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: isguvenligi_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-isguvenligi}
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password123}
      POSTGRES_MULTIPLE_DATABASES: keycloak
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-admin}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Keycloak Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: isguvenligi_keycloak
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: ${DB_USER:-admin}
      KC_DB_PASSWORD: ${DB_PASSWORD:-password123}
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_FEATURES: token-exchange,admin-fine-grained-authz,multi-site
      # Optimization settings
      JAVA_OPTS_APPEND: "-Djava.awt.headless=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.net.preferIPv4Stack=true"
    command: start-dev --import-realm
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./keycloak/themes:/opt/keycloak/themes
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3 && cat <&3 | grep -q '200 OK' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # NestJS Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: isguvenligi_backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${BACKEND_PORT:-3001}
      DATABASE_URL: postgresql://${DB_USER:-admin}:${DB_PASSWORD:-password123}@postgres:5432/${DB_NAME:-isguvenligi}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-isguvenligi}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID:-backend-client}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET:-backend-secret-2024}
      # Node.js optimization
      NODE_OPTIONS: "--max-old-space-size=512"
    ports:
      - "3001:3001"
      - "9229:9229"  # Debug port
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '1.0'
        reservations:
          memory: 384M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: npm run start:debug

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        NODE_ENV: ${NODE_ENV:-development}
    container_name: isguvenligi_frontend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      NEXT_PUBLIC_KEYCLOAK_URL: ${NEXT_PUBLIC_KEYCLOAK_URL:-http://localhost:8080}
      NEXT_PUBLIC_KEYCLOAK_REALM: ${KEYCLOAK_REALM:-isguvenligi}
      NEXT_PUBLIC_KEYCLOAK_CLIENT_ID: ${KEYCLOAK_FRONTEND_CLIENT_ID:-frontend-client}
      # Next.js optimization
      NODE_OPTIONS: "--max-old-space-size=1024"
      NEXT_TELEMETRY_DISABLED: 1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: npm run dev

  # Redis for Session Management
  redis:
    image: redis:7-alpine
    container_name: isguvenligi_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local
  frontend_next:
    driver: local

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: isguvenligi_br
    ipam:
      config:
        - subnet: 172.20.0.0/16